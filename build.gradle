plugins {
    id 'java-library'
    id 'io.qameta.allure' version '2.12.0'
    id 'io.freefair.lombok' version '6.0.0-m2'
}

def allureVersion = "2.21.0",
    aspectjWeaverVersion = "1.9.22",
    selenideVersion = "6.13.0",
    junitVersion = "5.9.3",
    slf4jVersion = "2.0.7"

group = 'ru.trubnikov'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

allure {
    report {
        version.set(allureVersion)
    }
    adapter {
        aspectjWeaver.set(true)
        frameworks {
            junit5 {
                adapterVersion.set('2.21.0')
            }
        }
    }
}

dependencies {
    testImplementation(
            "org.aspectj:aspectjweaver:$aspectjWeaverVersion", // Обработка аннотаций @Step для Allure отчетов
            "com.codeborne:selenide:$selenideVersion", // Фреймворк для автоматизации веб-тестирования
            'io.appium:java-client:8.3.0', // Клиент для автоматизации мобильных приложений
            "io.qameta.allure:allure-selenide:$allureVersion", // Интеграция Selenide с Allure отчетами
            "org.junit.jupiter:junit-jupiter:$junitVersion", // Тестовый фреймворк JUnit 5
            "org.slf4j:slf4j-simple:$slf4jVersion", // Простая реализация логирования
            'org.aeonbits.owner:owner:1.0.12', // Библиотека для работы с конфигурационными файлами
            "com.fasterxml.jackson.core:jackson-core:2.13.1", // Ядро библиотеки для работы с JSON
            "com.fasterxml.jackson.core:jackson-annotations:2.13.1", // Аннотации для Jackson JSON
            "com.fasterxml.jackson.core:jackson-databind:2.14.1", // Привязка данных JSON к Java объектам
            'io.rest-assured:rest-assured:5.3.1' // Библиотека для тестирования REST API
    )
    testRuntimeOnly('org.junit.jupiter:junit-jupiter-engine:5.9.0') // Движок выполнения тестов JUnit 5
}

tasks.withType(Test) {
    useJUnitPlatform()
    systemProperties(System.getProperties())

    testLogging {
        lifecycle {
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
}

task browserstack_test(type: Test) {
    systemProperty 'host', 'browserstack'
    systemProperty 'device', System.getProperty('device', 'Samsung Galaxy S22')
    systemProperty 'os_version', System.getProperty('os_version', '12.0')
}

task emulator_test(type: Test) {
    systemProperty 'env', 'emulator'
    systemProperty 'device', System.getProperty('device', 'Pixel_4_API_30')
}